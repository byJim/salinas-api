generator client {
  provider      = "prisma-client"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x", "linux-arm64-openssl-1.1.x"]
  output        = "../src/generated/prisma/client" // Asegúrate de que esta ruta sea correcta para tu estructura de proyecto
}

datasource db {
  provider = "postgresql"
  // Es una mejor práctica cargar la URL desde las variables de entorno (.env)
  url      = env("APP_DATABASE_CONNECTION_URL")
}

// Enum para los roles de usuario, utilizado en el modelo Account.
enum Role {
  ADMIN
  CUSTOMER
}

// Renombrado de 'User' a 'Account' para reflejar mejor su propósito en la autenticación.
model User {
  id        String   @id @default(uuid())
  nombre    String
  apellido  String
  email     String   @unique
  // Renombrado de 'hash' a 'password' para mayor claridad.
  password  String
  role      Role     @default(CUSTOMER)
  estado    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relación uno a muchos con el modelo Session.
  sessions Session[]
}

// Modelo para las sesiones de usuario, utilizado para la rotación de refresh tokens.
model Session {
  id        String   @id @default(uuid())
  expiresAt DateTime
  createdAt DateTime @default(now())

  // Relación con el modelo Account.
  account   User   @relation(fields: [accountId], references: [id], onDelete: Cascade)
  accountId String
}
